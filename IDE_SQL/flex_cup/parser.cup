package com.jbrod.ide_sql.app.analyzer;
import java_cup.runtime.*;

parser code{:

    //Conectar parser al scanner
    public SqlParser(SqlLexer lex){
        super(lex);
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
        System.out.println("Linea " + cur_token.left);
        System.out.println("Columna " + cur_token.right);
        if (expected_token_ids().isEmpty()) {
            System.out.println("ya no se esperaba ningun simbolo");
        }
    }
    
    /*public void unrecovered_syntax_error(Symbol cur_token) {
        System.out.println("Error irrecuperable sobrecargado");
    }*/

:}


/* - - - - - - - - - - - - - - -Terminales - - - - - - - - - - - - - - - - */
terminal        RELOP, LOGICALOP;
terminal        EOINSTR, ALLCOLUMNS;
terminal        LCURLYBRKT, RCURLYBRKT, LPAR, RPAR;
terminal        COMMA, DOT;
terminal        FILTRAR, EN,  VALORES, ASIGNAR;
terminal        ACTUALIZAR, INSERTAR, SELECCIONAR, ELIMINAR;
terminal String DIGIT, IDENTIFIER, VALUE, ERROR;

/* - - - - - - - - - - - - - - No terminales - - - - - - - - - - - - - - - */
/* Instrucciones */
non terminal instruccion, seleccionar, insertar, actualizar, eliminar;

/* Recurrentes */
non terminal columnas_insertar, listado_columnas, listado_columnas_concat;
non terminal condiciones, concat_condiciones, condicion_seleccion;
non terminal lista_valores, lista_valores_concat;

non terminal path_archivo,  filtrar;


/* - - - - - - - - - - - - - - Producciones - - - - - - - - - - - - - - -  */
instruccion ::= seleccionar | insertar | actualizar | eliminar;

/* Expresiones recurrentes */
condiciones ::= condicion_seleccion concat_condiciones;
condicion_seleccion ::= IDENTIFIER RELOP VALUE;
concat_condiciones ::= LOGICALOP condicion_seleccion | /* epsilon */;

path_archivo ::= IDENTIFIER DOT IDENTIFIER;

columnas_insertar ::= LPAR listado_columnas RPAR | /*epsilon*/;
listado_columnas ::= IDENTIFIER listado_columnas_concat | ALLCOLUMNS;
listado_columnas_concat ::= COMMA IDENTIFIER | /*epsilon*/ ;

lista_valores ::= VALUE lista_valores_concat;  
lista_valores_concat ::= COMMA VALUE | /*epsilon*/;

filtrar ::= FILTRAR condiciones | /*epsilon*/;



/* Instrucciones */
seleccionar ::= SELECCIONAR listado_columnas EN path_archivo filtrar EOINSTR;
insertar ::= INSERTAR EN path_archivo columnas_insertar VALORES  LPAR lista_valores RPAR EOINSTR;
actualizar ::= ACTUALIZAR EN path_archivo ASIGNAR listado_columnas FILTRAR condiciones EOINSTR;
eliminar ::= ELIMINAR EN path_archivo filtrar EOINSTR;


